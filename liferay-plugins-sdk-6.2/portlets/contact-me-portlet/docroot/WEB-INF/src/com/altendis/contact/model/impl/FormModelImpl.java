/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.altendis.contact.model.impl;

import com.altendis.contact.model.Form;
import com.altendis.contact.model.FormModel;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the Form service. Represents a row in the &quot;Altendis_Form&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.altendis.contact.model.FormModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link FormImpl}.
 * </p>
 *
 * @author pif
 * @see FormImpl
 * @see com.altendis.contact.model.Form
 * @see com.altendis.contact.model.FormModel
 * @generated
 */
public class FormModelImpl extends BaseModelImpl<Form> implements FormModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a form model instance should use the {@link com.altendis.contact.model.Form} interface instead.
	 */
	public static final String TABLE_NAME = "Altendis_Form";
	public static final Object[][] TABLE_COLUMNS = {
			{ "formId", Types.BIGINT },
			{ "groupId", Types.BIGINT },
			{ "createDate", Types.TIMESTAMP },
			{ "nom", Types.VARCHAR },
			{ "prenom", Types.VARCHAR },
			{ "telephone", Types.VARCHAR },
			{ "email", Types.VARCHAR },
			{ "comment_", Types.VARCHAR }
		};
	public static final String TABLE_SQL_CREATE = "create table Altendis_Form (formId LONG not null primary key,groupId LONG,createDate DATE null,nom VARCHAR(75) null,prenom VARCHAR(75) null,telephone VARCHAR(16) null,email VARCHAR(75) null,comment_ STRING null)";
	public static final String TABLE_SQL_DROP = "drop table Altendis_Form";
	public static final String ORDER_BY_JPQL = " ORDER BY form.formId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY Altendis_Form.formId ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.altendis.contact.model.Form"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.altendis.contact.model.Form"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = false;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.altendis.contact.model.Form"));

	public FormModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _formId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setFormId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _formId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return Form.class;
	}

	@Override
	public String getModelClassName() {
		return Form.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("formId", getFormId());
		attributes.put("groupId", getGroupId());
		attributes.put("createDate", getCreateDate());
		attributes.put("nom", getNom());
		attributes.put("prenom", getPrenom());
		attributes.put("telephone", getTelephone());
		attributes.put("email", getEmail());
		attributes.put("comment", getComment());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long formId = (Long)attributes.get("formId");

		if (formId != null) {
			setFormId(formId);
		}

		Long groupId = (Long)attributes.get("groupId");

		if (groupId != null) {
			setGroupId(groupId);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		String nom = (String)attributes.get("nom");

		if (nom != null) {
			setNom(nom);
		}

		String prenom = (String)attributes.get("prenom");

		if (prenom != null) {
			setPrenom(prenom);
		}

		String telephone = (String)attributes.get("telephone");

		if (telephone != null) {
			setTelephone(telephone);
		}

		String email = (String)attributes.get("email");

		if (email != null) {
			setEmail(email);
		}

		String comment = (String)attributes.get("comment");

		if (comment != null) {
			setComment(comment);
		}
	}

	@Override
	public long getFormId() {
		return _formId;
	}

	@Override
	public void setFormId(long formId) {
		_formId = formId;
	}

	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		_groupId = groupId;
	}

	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_createDate = createDate;
	}

	@Override
	public String getNom() {
		if (_nom == null) {
			return StringPool.BLANK;
		}
		else {
			return _nom;
		}
	}

	@Override
	public void setNom(String nom) {
		_nom = nom;
	}

	@Override
	public String getPrenom() {
		if (_prenom == null) {
			return StringPool.BLANK;
		}
		else {
			return _prenom;
		}
	}

	@Override
	public void setPrenom(String prenom) {
		_prenom = prenom;
	}

	@Override
	public String getTelephone() {
		if (_telephone == null) {
			return StringPool.BLANK;
		}
		else {
			return _telephone;
		}
	}

	@Override
	public void setTelephone(String telephone) {
		_telephone = telephone;
	}

	@Override
	public String getEmail() {
		if (_email == null) {
			return StringPool.BLANK;
		}
		else {
			return _email;
		}
	}

	@Override
	public void setEmail(String email) {
		_email = email;
	}

	@Override
	public String getComment() {
		if (_comment == null) {
			return StringPool.BLANK;
		}
		else {
			return _comment;
		}
	}

	@Override
	public void setComment(String comment) {
		_comment = comment;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
			Form.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public Form toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (Form)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		FormImpl formImpl = new FormImpl();

		formImpl.setFormId(getFormId());
		formImpl.setGroupId(getGroupId());
		formImpl.setCreateDate(getCreateDate());
		formImpl.setNom(getNom());
		formImpl.setPrenom(getPrenom());
		formImpl.setTelephone(getTelephone());
		formImpl.setEmail(getEmail());
		formImpl.setComment(getComment());

		formImpl.resetOriginalValues();

		return formImpl;
	}

	@Override
	public int compareTo(Form form) {
		long primaryKey = form.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof Form)) {
			return false;
		}

		Form form = (Form)obj;

		long primaryKey = form.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
	}

	@Override
	public CacheModel<Form> toCacheModel() {
		FormCacheModel formCacheModel = new FormCacheModel();

		formCacheModel.formId = getFormId();

		formCacheModel.groupId = getGroupId();

		Date createDate = getCreateDate();

		if (createDate != null) {
			formCacheModel.createDate = createDate.getTime();
		}
		else {
			formCacheModel.createDate = Long.MIN_VALUE;
		}

		formCacheModel.nom = getNom();

		String nom = formCacheModel.nom;

		if ((nom != null) && (nom.length() == 0)) {
			formCacheModel.nom = null;
		}

		formCacheModel.prenom = getPrenom();

		String prenom = formCacheModel.prenom;

		if ((prenom != null) && (prenom.length() == 0)) {
			formCacheModel.prenom = null;
		}

		formCacheModel.telephone = getTelephone();

		String telephone = formCacheModel.telephone;

		if ((telephone != null) && (telephone.length() == 0)) {
			formCacheModel.telephone = null;
		}

		formCacheModel.email = getEmail();

		String email = formCacheModel.email;

		if ((email != null) && (email.length() == 0)) {
			formCacheModel.email = null;
		}

		formCacheModel.comment = getComment();

		String comment = formCacheModel.comment;

		if ((comment != null) && (comment.length() == 0)) {
			formCacheModel.comment = null;
		}

		return formCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(17);

		sb.append("{formId=");
		sb.append(getFormId());
		sb.append(", groupId=");
		sb.append(getGroupId());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", nom=");
		sb.append(getNom());
		sb.append(", prenom=");
		sb.append(getPrenom());
		sb.append(", telephone=");
		sb.append(getTelephone());
		sb.append(", email=");
		sb.append(getEmail());
		sb.append(", comment=");
		sb.append(getComment());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(28);

		sb.append("<model><model-name>");
		sb.append("com.altendis.contact.model.Form");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>formId</column-name><column-value><![CDATA[");
		sb.append(getFormId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupId</column-name><column-value><![CDATA[");
		sb.append(getGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>nom</column-name><column-value><![CDATA[");
		sb.append(getNom());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>prenom</column-name><column-value><![CDATA[");
		sb.append(getPrenom());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>telephone</column-name><column-value><![CDATA[");
		sb.append(getTelephone());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>email</column-name><column-value><![CDATA[");
		sb.append(getEmail());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>comment</column-name><column-value><![CDATA[");
		sb.append(getComment());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = Form.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] { Form.class };
	private long _formId;
	private long _groupId;
	private Date _createDate;
	private String _nom;
	private String _prenom;
	private String _telephone;
	private String _email;
	private String _comment;
	private Form _escapedModel;
}